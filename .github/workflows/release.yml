name:                      release

on:
  repository_dispatch:
    types:                 [release-command]

jobs:
  # lint code on a ubuntu runner.
  lint:
    name:                  lint
    runs-on:               ubuntu-latest

    steps:
      # checkout the current PR of `Swiftagram`.
      - name:              Checkout
        uses:              actions/checkout@v2
        with:
            token:         ${{ secrets.GITHUB_TOKEN }}
            repository:    ${{ github.event.client_payload.pull_request.head.repo.full_name }}
            ref:           ${{ github.event.client_payload.pull_request.head.ref }}
      # lint code.
      - name:              Lint
        uses:              norio-nomura/action-swiftlint@3.1.0
        with:
          args:            --strict
      # notify failure.
      - name:              Notify (Failure)
        uses:              peter-evans/create-or-update-comment@v1
        if:                ${{ failure() }}
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:

            Unfortunately, linting failed.\
            Please make sure your code is complying to _.swiftlint.yml_.

            A maintener will get to you soon.
  # build code on a macOS runner.
  build:
    name:                  build
    needs:                 lint
    runs-on:               macos-latest

    steps:
      # checkout the current PR of `Swiftagram`.
      - name:              Checkout
        uses:              actions/checkout@v2
        with:
            token:         ${{ secrets.GITHUB_TOKEN }}
            repository:    ${{ github.event.client_payload.pull_request.head.repo.full_name }}
            ref:           ${{ github.event.client_payload.pull_request.head.ref }}
      # build library.
      - name:              Build
        run:               swift build
      # notify failure.
      - name:              Notify (Failure)
        uses:              peter-evans/create-or-update-comment@v1
        if:                ${{ failure() }}
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:

            Unfortunately, the build couldn't be completed.\
            Please adjust your code so that it actually runs :blush:.

            A maintener will get to you soon.
  # merge into master.
  merge:
    name:                  merge
    needs:                 build
    runs-on:               ubuntu-latest

    steps:
      # checkout the current PR of `Swiftagram`.
      - name:              Checkout
        uses:              actions/checkout@v2
        with:
            token:         ${{ secrets.GITHUB_TOKEN }}
            repository:    ${{ github.event.client_payload.pull_request.head.repo.full_name }}
            ref:           ${{ github.event.client_payload.pull_request.head.ref }}
      # merge into `main`.
      - name:              Merge
        uses:              everlytic/branch-merge@1.1.0
        with:
          github_token:    ${{ secrets.CHATOPS_PAT }}
          source_ref:      ${{ github.event.client_payload.pull_request.head.ref }}
          target_branch:   main
      # notify failure.
      - name:              Notify (Failure)
        uses:              peter-evans/create-or-update-comment@v1
        if:                ${{ failure() }}
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:

            Unfortunately, merging into `main` couldn't be completed.\
            Please make sure your commit history **actually** allows for it.

            A maintener will get to you soon.
  # test release.
  test:
    name:                  test
    needs:                 merge
    runs-on:               macos-latest

    steps:
      # checkout the current PR of `Swiftagram`.
      - name:              Checkout
        uses:              actions/checkout@v2
        with:
            ref:           main
      # checkout `SwiftagramFetcher`.
      - name:              Checkout (SwiftagramFetcher)
        uses:              actions/checkout@v2
        with:
            token:         ${{ secrets.CHATOPS_PAT }}
            repository:    sbertix/SwiftagramFetcher
            path:          fetcher
      # log in using the repo's secrets.
      - name:              Authenticate
        uses:              ./fetcher
        id:                fetcher
        with:
          username:        ${{ secrets.INSTAGRAM_USERNAME }}
          password:        ${{ secrets.INSTAGRAM_PASSWORD }}
          key:             ${{ secrets.KEY }}
      # run all tests.
      - name:              Test
        env:
          SECRET:          ${{ steps.fetcher.outputs.secret }}
          IV:              ${{ steps.fetcher.outputs.iv }}
          KEY:             ${{ secrets.KEY }}
        run:               swift test --parallel --enable-test-discovery --enable-code-coverage
      # check for coverage.
      - name:              Coverage (1)
        run:               xcrun llvm-cov export -format="lcov" .build/debug/SwiftagramPackageTests.xctest/Contents/MacOS/SwiftagramPackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov
      # upload coverage to `codecov`.
      - name:              Coverage (2)
        uses:              codecov/codecov-action@v1
        with:
          token:           ${{ secrets.CODECOV_TOKEN }}
        timeout-minutes:   1
        continue-on-error: true
      # notify failure.
      - name:              Notify (Failure)
        uses:              peter-evans/create-or-update-comment@v1
        if:                ${{ failure() }}
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:
            Unfortunately, some of the tests required failed.\

            This might be related to Instagram anti-spam measures (as we're using a single account to test all requests).\
            If that's the case consider testing this commit again in a couple hours.

            Either way, a maintener will get to you soon.
  # create release.
  release:
    name:                  release
    needs:                 test
    runs-on:               ubuntu-latest

    steps:
      # checkout the `main` branch.
      - name:              Checkout
        uses:              actions/checkout@v2
        with:
            ref:           main
      # fetch commits.
      - name:              Commits
        run:               git fetch --prune --unshallow --tags
      # create the changelog.
      - name:              Changelogs
        id:                changelogs
        uses:              heineiuo/create-changelogs@master
      # actually release.
      - name:              Release
        id:                release
        uses:              actions/create-release@latest
        env:
          GITHUB_TOKEN:    ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:        ${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}
          release_name:    v${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}
          body:            ${{ steps.changelogs.outputs.changelogs }}
          draft:           true
          prerelease:      ${{ steps.changelogs.outputs.release_type == 'prerelease' }}
      # notify on Telegram.
      - name:              Notify (Telegram)
        uses:              appleboy/telegram-action@master
        with:
          to:              ${{ secrets.TELEGRAM_TO }}
          token:           ${{ secrets.TELEGRAM_TOKEN }}
          format:          markdown
          args:            |
            A [new version](${{ steps.release.outputs.html_url }}) of **Swiftagram** was just released.
            Please consider updating your code.
        continue-on-error: true
      # notify success.
      - name:              Notify (Success)
        uses:              peter-evans/create-or-update-comment@v1
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:\
            [${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}](${{ steps.release.outputs.html_url }}) was successfully drafted.

            A maintener will get to release it as soon as possible.
      # notify failure.
      - name:              Notify (Failure)
        uses:              peter-evans/create-or-update-comment@v1
        if:                ${{ failure() }}
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:

            Unfortunately, the release couldn't be created.\
            A maintener will get to you soon.
  # create docs.
  docs:
    name:                  docs
    needs:                 release
    runs-on:               ubuntu-latest

    steps:
      # checkout the `main` branch.
      - name:              Checkout
        uses:              actions/checkout@v2
        with:
          ref:             main
      # create documentation.
      - name:              Docs
        uses:              SwiftDocOrg/swift-doc@master
        with:
          inputs:          "Sources"
          format:          "html"
          module-name:     Swiftagram
          output:          docs
      # update permissions.
      - name:              Update Permissions
        run:               'sudo chown --recursive $USER docs'
      # publish to GitHub pages.
      - name:              Publish
        uses:              JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN:    ${{ secrets.CHATOPS_PAT }}
          BRANCH:          gh-pages
          FOLDER:          docs
      # notify failure.
      - name:              Notify (Failure)
        uses:              peter-evans/create-or-update-comment@v1
        if:                ${{ failure() }}
        with:
          issue-number:    ${{ github.event.client_payload.github.payload.issue.number }}
          body:            |
            Hey @${{ github.event.client_payload.github.actor }} :muscle:

            Unfortunately, the docs couldn't be published.\
            Don't worry, though: [${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}](${{ steps.release.outputs.html_url }}) has still been released.

            A maintener will get to you soon.
